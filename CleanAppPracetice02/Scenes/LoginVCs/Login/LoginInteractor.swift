//
//  LoginInteractor.swift
//  CleanAppPracetice02
//
//  Created by Papon Supamongkonchai on 20/7/2565 BE.
//  Copyright (c) 2565 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
    func doSomething(request: Login.LoginSubmit.Request)
    func doLogin(request: Login.LoginSubmit.Request)
    func doValidate(request: Login.LoginSubmit.Request)
}

protocol LoginDataStore
{
    var username: String { get set }
    var password: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    
    
    var presenter: LoginPresentationLogic?
    var worker: LoginWorker?
    
    var username: String = ""
    var password: String = ""
    // MARK: Do something
    
    func doSomething(request: Login.LoginSubmit.Request)
    {
        worker = LoginWorker()
        worker?.doSomeWork()
        
        let response = Login.LoginSubmit.Response(success: false)
        presenter?.presentSomething(response: response)
    }
    
    func doLogin(request: Login.LoginSubmit.Request){
        username = request.username
        password = request.password
        #warning("Assume case is success")
        if !username.isEmpty && !password.isEmpty{
            let response = Login.LoginSubmit.Response(success: true)
            presenter?.presentSubmitLogin(response: response)
        }else{
            let response = Login.LoginSubmit.Response(success: false)
            presenter?.presentSomething(response: response)
            
        }
        
    }
    
    func doValidate(request: Login.LoginSubmit.Request){
//        let response = Login.Something.Response()
//        presenter?.presentSubmitLogin(response: response)
    }
}
